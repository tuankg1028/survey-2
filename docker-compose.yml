version: '3.7'
services:
  web:
    image: untadee/survey-api:latest
    build: .
    ports:
      - "3333:3333"
    networks:
      - webnet
      - reverse-proxy-net
    depends_on:
      - redis
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy-net"
      - "traefik.http.routers.web.rule=Host(`rais.dista.uninsubria.it`)"
      # - traefik.http.services.web.loadbalancer.server.port=8080
    # service deployment
    deploy:
      # service resource management
      resources:
        # Hard limit - Docker does not allow to allocate more
        limits:
          cpus: '0.50'
          memory: 512M
        # Soft limit - Docker makes best effort to return to it
        reservations:
          cpus: '0.50'
          memory: 256M
      # service restart policy
      # replicas: 4
      # update_config:
      #   parallelism: 2
      #   order: start-first
      #   failure_action: rollback
      #   delay: 10s
      # rollback_config:
      #   parallelism: 0
      #   order: stop-first
      # restart_policy:
      #   condition: on-failure
      #   delay: 5s
      #   max_attempts: 3
      #   window: 120s
  redis:
    image: redis:6.0-rc1
    ports:
      - "6378:6379"
    volumes:
      - data:/home/docker/data
    networks:
      - webnet
    deploy:
      # replicas: 4
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes

  
  traefik:
    image: traefik:v2.4
    # command:
    #   - --docker
    #   - --docker.swarmMode
    #   - --docker.exposedByDefault=false
    #   - --docker.watch
    #   - --docker.domain=traefik.lc
    ports:
      - 80:80
      - 8080:8080
    networks:
      - reverse-proxy-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/traefik.yml:/etc/traefik/traefik.yml
      # - /Users/xander/traefik.yml:/etc/traefik/traefik.yml
    # deploy:
    #   placement:
    #     constraints:
    #       - node.role==manager
    # labels:
      # - "traefik.http.routers.dashboard.rule=Host(`rais.dista.uninsubria.it`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"

networks:
  webnet:
  reverse-proxy-net:
    name: reverse-proxy-net
    driver: overlay
volumes:
  data: